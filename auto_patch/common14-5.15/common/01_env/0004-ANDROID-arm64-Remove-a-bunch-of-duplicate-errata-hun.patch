From adfeb390e874c58178d00fe52e8b32dc2f1acd03 Mon Sep 17 00:00:00 2001
From: Lee Jones <joneslee@google.com>
Date: Tue, 12 Dec 2023 09:05:43 +0000
Subject: [PATCH] ANDROID: arm64: Remove a bunch of duplicate errata hunks

Fix some merging errors.  Quells the following WARN() output:

  Duplicate entry for capability 62
  WARNING: CPU: 0 PID: 0 at arch/arm64/kernel/cpufeature.c:958 init_cpu_hwcaps_indirect_list_from_array+0x7c/0x98

Bug: 315739115
Signed-off-by: Lee Jones <joneslee@google.com>
Change-Id: I4e8798cc6395050a54222ec68432fae3c286dd87
---
 arch/arm64/Kconfig             | 115 ---------------------------------
 arch/arm64/kernel/cpu_errata.c |  15 -----
 2 files changed, 130 deletions(-)

diff --git a/arch/arm64/Kconfig b/arch/arm64/Kconfig
index 062303e522e8..70de1cbc09ca 100644
--- a/arch/arm64/Kconfig
+++ b/arch/arm64/Kconfig
@@ -713,9 +713,6 @@ config ARM64_ERRATUM_1508412
 
 	  If unsure, say Y.
 
-config ARM64_WORKAROUND_TRBE_OVERWRITE_FILL_MODE
-	bool
-
 config ARM64_ERRATUM_2658417
 	bool "Cortex-A510: 2658417: remove BF16 support due to incorrect result"
 	default y
@@ -874,118 +871,6 @@ config ARM64_ERRATUM_2457168
 config ARM64_WORKAROUND_TRBE_OVERWRITE_FILL_MODE
 	bool
 
-config ARM64_ERRATUM_2119858
-	bool "Cortex-A710: 2119858: workaround TRBE overwriting trace data in FILL mode"
-	default y
-	depends on COMPILE_TEST # Until the CoreSight TRBE driver changes are in
-	depends on CORESIGHT_TRBE
-	select ARM64_WORKAROUND_TRBE_OVERWRITE_FILL_MODE
-	help
-	  This option adds the workaround for ARM Cortex-A710 erratum 2119858.
-
-	  Affected Cortex-A710 cores could overwrite up to 3 cache lines of trace
-	  data at the base of the buffer (pointed to by TRBASER_EL1) in FILL mode in
-	  the event of a WRAP event.
-
-	  Work around the issue by always making sure we move the TRBPTR_EL1 by
-	  256 bytes before enabling the buffer and filling the first 256 bytes of
-	  the buffer with ETM ignore packets upon disabling.
-
-	  If unsure, say Y.
-
-config ARM64_ERRATUM_2139208
-	bool "Neoverse-N2: 2139208: workaround TRBE overwriting trace data in FILL mode"
-	default y
-	depends on COMPILE_TEST # Until the CoreSight TRBE driver changes are in
-	depends on CORESIGHT_TRBE
-	select ARM64_WORKAROUND_TRBE_OVERWRITE_FILL_MODE
-	help
-	  This option adds the workaround for ARM Neoverse-N2 erratum 2139208.
-
-	  Affected Neoverse-N2 cores could overwrite up to 3 cache lines of trace
-	  data at the base of the buffer (pointed to by TRBASER_EL1) in FILL mode in
-	  the event of a WRAP event.
-
-	  Work around the issue by always making sure we move the TRBPTR_EL1 by
-	  256 bytes before enabling the buffer and filling the first 256 bytes of
-	  the buffer with ETM ignore packets upon disabling.
-
-	  If unsure, say Y.
-
-config ARM64_WORKAROUND_TSB_FLUSH_FAILURE
-	bool
-
-config ARM64_ERRATUM_2054223
-	bool "Cortex-A710: 2054223: workaround TSB instruction failing to flush trace"
-	default y
-	select ARM64_WORKAROUND_TSB_FLUSH_FAILURE
-	help
-	  Enable workaround for ARM Cortex-A710 erratum 2054223
-
-	  Affected cores may fail to flush the trace data on a TSB instruction, when
-	  the PE is in trace prohibited state. This will cause losing a few bytes
-	  of the trace cached.
-
-	  Workaround is to issue two TSB consecutively on affected cores.
-
-	  If unsure, say Y.
-
-config ARM64_ERRATUM_2067961
-	bool "Neoverse-N2: 2067961: workaround TSB instruction failing to flush trace"
-	default y
-	select ARM64_WORKAROUND_TSB_FLUSH_FAILURE
-	help
-	  Enable workaround for ARM Neoverse-N2 erratum 2067961
-
-	  Affected cores may fail to flush the trace data on a TSB instruction, when
-	  the PE is in trace prohibited state. This will cause losing a few bytes
-	  of the trace cached.
-
-	  Workaround is to issue two TSB consecutively on affected cores.
-
-	  If unsure, say Y.
-
-config ARM64_WORKAROUND_TRBE_WRITE_OUT_OF_RANGE
-	bool
-
-config ARM64_ERRATUM_2253138
-	bool "Neoverse-N2: 2253138: workaround TRBE writing to address out-of-range"
-	depends on COMPILE_TEST # Until the CoreSight TRBE driver changes are in
-	depends on CORESIGHT_TRBE
-	default y
-	select ARM64_WORKAROUND_TRBE_WRITE_OUT_OF_RANGE
-	help
-	  This option adds the workaround for ARM Neoverse-N2 erratum 2253138.
-
-	  Affected Neoverse-N2 cores might write to an out-of-range address, not reserved
-	  for TRBE. Under some conditions, the TRBE might generate a write to the next
-	  virtually addressed page following the last page of the TRBE address space
-	  (i.e., the TRBLIMITR_EL1.LIMIT), instead of wrapping around to the base.
-
-	  Work around this in the driver by always making sure that there is a
-	  page beyond the TRBLIMITR_EL1.LIMIT, within the space allowed for the TRBE.
-
-	  If unsure, say Y.
-
-config ARM64_ERRATUM_2224489
-	bool "Cortex-A710: 2224489: workaround TRBE writing to address out-of-range"
-	depends on COMPILE_TEST # Until the CoreSight TRBE driver changes are in
-	depends on CORESIGHT_TRBE
-	default y
-	select ARM64_WORKAROUND_TRBE_WRITE_OUT_OF_RANGE
-	help
-	  This option adds the workaround for ARM Cortex-A710 erratum 2224489.
-
-	  Affected Cortex-A710 cores might write to an out-of-range address, not reserved
-	  for TRBE. Under some conditions, the TRBE might generate a write to the next
-	  virtually addressed page following the last page of the TRBE address space
-	  (i.e., the TRBLIMITR_EL1.LIMIT), instead of wrapping around to the base.
-
-	  Work around this in the driver by always making sure that there is a
-	  page beyond the TRBLIMITR_EL1.LIMIT, within the space allowed for the TRBE.
-
-	  If unsure, say Y.
-
 config CAVIUM_ERRATUM_22375
 	bool "Cavium erratum 22375, 24313"
 	default y
diff --git a/arch/arm64/kernel/cpu_errata.c b/arch/arm64/kernel/cpu_errata.c
index 1093bffc0421..dcb209a399c1 100644
--- a/arch/arm64/kernel/cpu_errata.c
+++ b/arch/arm64/kernel/cpu_errata.c
@@ -636,14 +636,6 @@ const struct arm64_cpu_capabilities arm64_errata[] = {
 		ERRATA_MIDR_RANGE_LIST(tsb_flush_fail_cpus),
 	},
 #endif
-#ifdef CONFIG_ARM64_WORKAROUND_TRBE_WRITE_OUT_OF_RANGE
-	{
-		.desc = "ARM erratum 2253138 or 2224489",
-		.capability = ARM64_WORKAROUND_TRBE_WRITE_OUT_OF_RANGE,
-		.type = ARM64_CPUCAP_WEAK_LOCAL_CPU_FEATURE,
-		CAP_MIDR_RANGE_LIST(trbe_write_out_of_range_cpus),
-	},
-#endif
 #ifdef CONFIG_ARM64_ERRATUM_2457168
 	{
 		.desc = "ARM erratum 2457168",
@@ -671,13 +663,6 @@ const struct arm64_cpu_capabilities arm64_errata[] = {
 		.cpu_enable = cpu_clear_bf16_from_user_emulation,
 	},
 #endif
-#ifdef CONFIG_ARM64_WORKAROUND_TSB_FLUSH_FAILURE
-	{
-		.desc = "ARM erratum 2067961 or 2054223",
-		.capability = ARM64_WORKAROUND_TSB_FLUSH_FAILURE,
-		ERRATA_MIDR_RANGE_LIST(tsb_flush_fail_cpus),
-	},
-#endif
 #ifdef CONFIG_ARM64_WORKAROUND_TRBE_WRITE_OUT_OF_RANGE
 	{
 		.desc = "ARM erratum 2253138 or 2224489",
-- 
2.42.0

