From ae1d6d0f8301f1fa68876277dbde6c56b26cf43d Mon Sep 17 00:00:00 2001
From: Tao Zeng <tao.zeng@amlogic.com>
Date: Fri, 20 Oct 2023 18:50:01 +0800
Subject: [PATCH] trace: add white list for trace event [1/1]

PD#SWPL-145324

Problem:
There are too many trace event inodes

Solution:
Add white list for trace event, this can save about 10MB memory

Verify:
t5m

Change-Id: I290020fc93e6114650313328ec8757720bfc8b1d
Signed-off-by: Tao Zeng <tao.zeng@amlogic.com>
---
 fs/tracefs/inode.c          | 81 +++++++++++++++++++++++++++++++++++++
 kernel/trace/trace.c        |  2 +
 kernel/trace/trace_events.c |  8 ++++
 3 files changed, 91 insertions(+)

diff --git a/fs/tracefs/inode.c b/fs/tracefs/inode.c
index 27aadfcb3716..48dc45d99ec8 100644
--- a/fs/tracefs/inode.c
+++ b/fs/tracefs/inode.c
@@ -536,6 +536,77 @@ static struct dentry *__create_dir(const char *name, struct dentry *parent,
 	return end_creating(dentry);
 }
 
+#ifdef CONFIG_AMLOGIC_MEMORY_OPT
+static char * const allow_trace[] = {
+	"sched",
+	"irq",
+	"freq",
+	"idle",
+	"block",
+	"binder",
+	"bpf_trace",
+	"cgroup",
+	"compaction",
+	"ext4",
+	"f2fs",
+	"ftrace",
+	"kmem",
+	"ion",
+	"mmap",
+	"power",
+	"rcu",
+	"task",
+	"events",
+	"signal",
+	"options",
+	"dmc_monitor",
+	"kprobes",
+	"vmscan",
+	"timer",
+	"workqueue",
+	"oom",
+	"ipi",
+	"preemptirq",
+	"clk",
+	"mmc",
+	"cpu_frequency",
+	"devfreq",
+	"per_cpu",
+	"thermal",
+	"filemap",
+};
+
+static int is_allowed_trace(const char *name)
+{
+	int i;
+
+	for (i = 0; i  < ARRAY_SIZE(allow_trace); i++) {
+		if (!strcmp(name, allow_trace[i]))
+			return 1;
+	}
+	return 0;
+}
+
+static int allow_trace_enable;
+
+static int __init early_allow_trace_enable_param(char *buf)
+{
+	if (!buf)
+		return -EINVAL;
+
+	if (strcmp(buf, "off") == 0)
+		allow_trace_enable = 0;
+	else if (strcmp(buf, "on") == 0)
+		allow_trace_enable = 1;
+
+	pr_debug("allow_trace_enable %sabled\n", allow_trace_enable ? "en" : "dis");
+
+	return 0;
+}
+
+early_param("allow_trace_enable", early_allow_trace_enable_param);
+#endif
+
 /**
  * tracefs_create_dir - create a directory in the tracefs filesystem
  * @name: a pointer to a string containing the name of the directory to
@@ -558,6 +629,16 @@ struct dentry *tracefs_create_dir(const char *name, struct dentry *parent)
 	if (security_locked_down(LOCKDOWN_TRACEFS))
 		return NULL;
 
+#ifdef CONFIG_AMLOGIC_MEMORY_OPT
+	if (allow_trace_enable && !is_allowed_trace(name)) {
+		if (parent) {
+			if (!strcmp(parent->d_iname, "events"))
+				return NULL;
+			if (!is_allowed_trace(parent->d_iname))
+				return NULL;
+		}
+	}
+#endif
 	return __create_dir(name, parent, &simple_dir_inode_operations);
 }
 
diff --git a/kernel/trace/trace.c b/kernel/trace/trace.c
index d2962fb5881e..6a10b57fe77c 100644
--- a/kernel/trace/trace.c
+++ b/kernel/trace/trace.c
@@ -8726,8 +8726,10 @@ static struct dentry *tracing_dentry_percpu(struct trace_array *tr, int cpu)
 
 	tr->percpu_dir = tracefs_create_dir("per_cpu", d_tracer);
 
+#ifndef CONFIG_AMLOGIC_MEMORY_OPT
 	MEM_FAIL(!tr->percpu_dir,
 		  "Could not create tracefs directory 'per_cpu/%d'\n", cpu);
+#endif
 
 	return tr->percpu_dir;
 }
diff --git a/kernel/trace/trace_events.c b/kernel/trace/trace_events.c
index 8f64f6c5ab9e..8c582d45a5af 100644
--- a/kernel/trace/trace_events.c
+++ b/kernel/trace/trace_events.c
@@ -2316,7 +2316,9 @@ event_subsystem_dir(struct trace_array *tr, const char *name,
 
 	dir->entry = tracefs_create_dir(name, parent);
 	if (!dir->entry) {
+	#ifndef CONFIG_AMLOGIC_MEMORY_OPT
 		pr_warn("Failed to create system directory %s\n", name);
+	#endif
 		__put_system(system);
 		goto out_free;
 	}
@@ -2416,7 +2418,9 @@ event_create_dir(struct dentry *parent, struct trace_event_file *file)
 	name = trace_event_name(call);
 	file->dir = tracefs_create_dir(name, d_events);
 	if (!file->dir) {
+	#ifndef CONFIG_AMLOGIC_MEMORY_OPT
 		pr_warn("Could not create tracefs '%s' directory\n", name);
+	#endif
 		return -1;
 	}
 
@@ -3016,9 +3020,11 @@ __trace_add_event_dirs(struct trace_array *tr)
 
 	list_for_each_entry(call, &ftrace_events, list) {
 		ret = __trace_add_new_event(call, tr);
+	#ifndef CONFIG_AMLOGIC_MEMORY_OPT
 		if (ret < 0)
 			pr_warn("Could not create directory for event %s\n",
 				trace_event_name(call));
+	#endif
 	}
 }
 
@@ -3482,9 +3488,11 @@ static void __trace_early_add_event_dirs(struct trace_array *tr)
 
 	list_for_each_entry(file, &tr->events, list) {
 		ret = event_create_dir(tr->event_dir, file);
+	#ifndef CONFIG_AMLOGIC_MEMORY_OPT
 		if (ret < 0)
 			pr_warn("Could not create directory for event %s\n",
 				trace_event_name(file->event_call));
+	#endif
 	}
 }
 
-- 
2.42.0

